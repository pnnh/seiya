// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// ffi bindings for seiyapkg plugin.
class SeiyapkgNative {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SeiyapkgNative(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SeiyapkgNative.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<QKString> QKStringCreate(
    ffi.Pointer<ffi.Char> data,
  ) {
    return _QKStringCreate(
      data,
    );
  }

  late final _QKStringCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<QKString> Function(
              ffi.Pointer<ffi.Char>)>>('QKStringCreate');
  late final _QKStringCreate = _QKStringCreatePtr.asFunction<
      ffi.Pointer<QKString> Function(ffi.Pointer<ffi.Char>)>();

  int QKStringDelete(
    ffi.Pointer<QKString> qkStr,
  ) {
    return _QKStringDelete(
      qkStr,
    );
  }

  late final _QKStringDeletePtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<QKString>)>>(
          'QKStringDelete');
  late final _QKStringDelete =
      _QKStringDeletePtr.asFunction<int Function(ffi.Pointer<QKString>)>();

  ffi.Pointer<ffi.Char> QKStringGetData(
    ffi.Pointer<QKString> qkStr,
  ) {
    return _QKStringGetData(
      qkStr,
    );
  }

  late final _QKStringGetDataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<QKString>)>>('QKStringGetData');
  late final _QKStringGetData = _QKStringGetDataPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(ffi.Pointer<QKString>)>();

  late final ffi.Pointer<ffi.Int> _SEResultOk = _lookup<ffi.Int>('SEResultOk');

  int get SEResultOk => _SEResultOk.value;

  late final ffi.Pointer<ffi.Int> _SEResultError =
      _lookup<ffi.Int>('SEResultError');

  int get SEResultError => _SEResultError.value;

  ffi.Pointer<ffi.Char> SEResultCodeToString(
    int qkCode,
  ) {
    return _SEResultCodeToString(
      qkCode,
    );
  }

  late final _SEResultCodeToStringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int)>>(
          'SEResultCodeToString');
  late final _SEResultCodeToString = _SEResultCodeToStringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  int add(
    int a,
    int b,
  ) {
    return _add(
      a,
      b,
    );
  }

  late final _addPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Int, ffi.Int)>>('add');
  late final _add = _addPtr.asFunction<int Function(int, int)>();

  int SEDartSvgToPng(
    ffi.Pointer<QKString> srcFilePath,
    ffi.Pointer<QKString> destFilePath,
    int size,
  ) {
    return _SEDartSvgToPng(
      srcFilePath,
      destFilePath,
      size,
    );
  }

  late final _SEDartSvgToPngPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<QKString>, ffi.Pointer<QKString>,
              ffi.Int)>>('SEDartSvgToPng');
  late final _SEDartSvgToPng = _SEDartSvgToPngPtr.asFunction<
      int Function(ffi.Pointer<QKString>, ffi.Pointer<QKString>, int)>();
}

final class QKString extends ffi.Struct {
  external ffi.Pointer<ffi.Void> mtStr;
}
